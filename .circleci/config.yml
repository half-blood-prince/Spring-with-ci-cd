# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1

orbs:
  heroku: circleci/heroku@1.0.1 # Invoke the Heroku orb

workflows:
  build_deploy:
    jobs:
      - build



jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: gradle dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      # run tests!
      - run: gradle test

      - store_test_results :
          path: ~/repo/build/test-results

      - run : gradle bootJar

      - store_artifacts:
          path: ~/repo/build/libs

  production_deploy:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    steps:
      - run:
        name: Run setup script
        command: bash /tmp/setup-heroku.sh
      - run:
          name: Heroku Deploy
          command: |
            cp ~/repo/build/libs .
            ls -la
            heroku plugins:install heroku-cli-deploy
            heroku plugins:install heroku-cli-deploy  # when debugging on circle image, first run succeeded, but did not make plugin available
            heroku deploy:jar spring-boot-ci-cd-0.0.1-SNAPSHOT.jar --app $HEROKU_APP_NAME


